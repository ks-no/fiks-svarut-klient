package no.ks.svarut.klient.forsendelse.send.v2.builders

import no.ks.fiks.svarut.forsendelse.send.model.v2.*
import java.time.OffsetDateTime
import java.util.*

fun buildRandomAdresse(): Adresse = AdresseBuilder()
    .navn(UUID.randomUUID().toString())
    .digitalId(UUID.randomUUID().toString())
    .adresselinje1(UUID.randomUUID().toString())
    .adresselinje2(UUID.randomUUID().toString())
    .adresselinje3(UUID.randomUUID().toString())
    .postnummer(UUID.randomUUID().toString())
    .poststed(UUID.randomUUID().toString())
    .land(UUID.randomUUID().toString())
    .build()

fun buildRandomDokument(): Dokument = DokumentBuilder()
    .dokumentType(UUID.randomUUID().toString())
    .ekstraMetadata((1..10).map { Metadata(UUID.randomUUID().toString(), UUID.randomUUID().toString()) })
    .filnavn(UUID.randomUUID().toString())
    .giroarkSider((1..10).map { Random().nextInt() }.toSet())
    .inneholderPersonsensitivInformasjon(Random().nextBoolean())
    .mimeType(UUID.randomUUID().toString())
    .skalEkskluderesFraUtskrift(Random().nextBoolean())
    .skalSigneres(Random().nextBoolean())
    .build()

fun buildRandomForsendelse(): Forsendelse = ForsendelseBuilder()
    .avgivendeSystem(UUID.randomUUID().toString())
    .dokumenter(listOf(buildRandomDokument()))
    .eksponertFor(setOf(UUID.randomUUID().toString()))
    .eksternReferanse(UUID.randomUUID().toString())
    .forsendelsestype(UUID.randomUUID().toString())
    .konteringskode(UUID.randomUUID().toString())
    .krevNiva4Innlogging(Random().nextBoolean())
    .kryptert(Random().nextBoolean())
    .kunDigitalLevering(Random().nextBoolean())
    .lenker(listOf(buildRandomLenke()))
    .metadataForImport(buildRandomNoarkMetadataForImport())
    .metadataFraAvleverendeSystem(buildRandomNoarkMetadataFraAvleverendeSaksSystem())
    .mottaker(buildRandomAdresse())
    .signaturType(Forsendelse.SignaturType.entries.random())
    .signeringUtloper(OffsetDateTime.now().plusDays(1))
    .svarPaForsendelse(UUID.randomUUID())
    .svarPaForsendelseLink(Random().nextBoolean())
    .svarSendesTil(buildRandomAdresse())
    .taushetsbelagtPost(Random().nextBoolean())
    .tittel(UUID.randomUUID().toString())
    .utskriftskonfigurasjon(buildRandomUtskriftskonfigurasjon())
    .build()


fun buildRandomLenke(): Lenke = LenkeBuilder()
    .ledetekst(UUID.randomUUID().toString())
    .tekst(UUID.randomUUID().toString())
    .url(UUID.randomUUID().toString())
    .build()

fun buildRandomNoarkMetadataForImport(): NoarkMetadataForImport = NoarkMetadataForImportBuilder()
    .dokumentetsDato(OffsetDateTime.now())
    .journalaar(Random().nextInt())
    .journalpostnummer(Random().nextLong())
    .journalposttype(UUID.randomUUID().toString())
    .journalsekvensnummer(Random().nextLong())
    .journalstatus(UUID.randomUUID().toString())
    .mappeId(UUID.randomUUID().toString())
    .mappeSystemId(UUID.randomUUID().toString())
    .registreringsId(UUID.randomUUID().toString())
    .saksaar(Random().nextInt())
    .sakssekvensnummer(Random().nextLong())
    .systemId(UUID.randomUUID().toString())
    .tittel(UUID.randomUUID().toString())
    .build()

fun buildRandomNoarkMetadataFraAvleverendeSaksSystem(): NoarkMetadataFraAvleverendeSaksSystem = NoarkMetadataFraAvleverendeSaksSystemBuilder()
    .dokumentetsDato(OffsetDateTime.now())
    .ekstraMetadata((1..10).map { Metadata(UUID.randomUUID().toString(), UUID.randomUUID().toString()) })
    .journalaar(Random().nextInt())
    .journaldato(OffsetDateTime.now())
    .journalpostnummer(Random().nextLong())
    .journalposttype(UUID.randomUUID().toString())
    .journalsekvensnummer(Random().nextLong())
    .journalstatus(UUID.randomUUID().toString())
    .mappeId(UUID.randomUUID().toString())
    .mappeSystemId(UUID.randomUUID().toString())
    .registreringsId(UUID.randomUUID().toString())
    .saksaar(Random().nextInt())
    .saksbehandler(UUID.randomUUID().toString())
    .sakssekvensnummer(Random().nextLong())
    .systemId(UUID.randomUUID().toString())
    .tittel(UUID.randomUUID().toString())
    .build()

fun buildRandomUtskriftskonfigurasjon(): Utskriftskonfigurasjon = UtskriftskonfigurasjonBuilder()
    .tosidig(Random().nextBoolean())
    .utskriftMedFarger(Random().nextBoolean())
    .build()
